import{_ as t,o as e,c as a,R as s}from"./chunks/framework.-3ULgdun.js";const g=JSON.parse('{"title":"timerWithControl","description":"","frontmatter":{},"headers":[],"relativePath":"api/timerWithControl.md","filePath":"api/timerWithControl.md"}'),i={name:"api/timerWithControl.md"},o=s(`<h1 id="timerwithcontrol" tabindex="-1">timerWithControl <a class="header-anchor" href="#timerwithcontrol" aria-label="Permalink to &quot;timerWithControl&quot;">​</a></h1><h2 id="functions" tabindex="-1">Functions <a class="header-anchor" href="#functions" aria-label="Permalink to &quot;Functions&quot;">​</a></h2><h3 id="timerwithcontrol-1" tabindex="-1">timerWithControl() <a class="header-anchor" href="#timerwithcontrol-1" aria-label="Permalink to &quot;timerWithControl()&quot;">​</a></h3><blockquote><p><strong>timerWithControl</strong>(<code>callback</code>, <code>options</code>): <code>Object</code></p></blockquote><p>创建可控的定时器</p><p><em><strong>注意：不支持自动执行回调，需手动调用 <code>start()</code> 或 <code>flush()</code> 执行回调！</strong></em></p><h4 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Parameter</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>callback</code></td><td style="text-align:left;"><code>NoopFn</code></td><td style="text-align:left;">回调句柄</td></tr><tr><td style="text-align:left;"><code>options</code></td><td style="text-align:left;"><a href="./timerWithControl.html#timerwithcontroloptions"><code>TimerWithControlOptions</code></a></td><td style="text-align:left;">配置项</td></tr></tbody></table><h4 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>Object</code></p><blockquote><h5 id="flush" tabindex="-1">flush <a class="header-anchor" href="#flush" aria-label="Permalink to &quot;flush&quot;">​</a></h5><blockquote><p><strong>flush</strong>: () =&gt; <code>void</code></p></blockquote><h6 id="returns-1" tabindex="-1">Returns <a class="header-anchor" href="#returns-1" aria-label="Permalink to &quot;Returns&quot;">​</a></h6><p><code>void</code></p><h5 id="isactive" tabindex="-1">isActive <a class="header-anchor" href="#isactive" aria-label="Permalink to &quot;isActive&quot;">​</a></h5><blockquote><p><strong>isActive</strong>: <code>Getter</code>&lt;<code>boolean</code>&gt;</p></blockquote><h5 id="start" tabindex="-1">start <a class="header-anchor" href="#start" aria-label="Permalink to &quot;start&quot;">​</a></h5><blockquote><p><strong>start</strong>: () =&gt; <code>void</code></p></blockquote><h6 id="returns-2" tabindex="-1">Returns <a class="header-anchor" href="#returns-2" aria-label="Permalink to &quot;Returns&quot;">​</a></h6><p><code>void</code></p><h5 id="stop" tabindex="-1">stop <a class="header-anchor" href="#stop" aria-label="Permalink to &quot;stop&quot;">​</a></h5><blockquote><p><strong>stop</strong>: () =&gt; <code>void</code></p></blockquote><h6 id="returns-3" tabindex="-1">Returns <a class="header-anchor" href="#returns-3" aria-label="Permalink to &quot;Returns&quot;">​</a></h6><p><code>void</code></p></blockquote><h4 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-label="Permalink to &quot;Example&quot;">​</a></h4><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> timer</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> timerWithControl</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Date.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">now</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">())</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 启动定时器</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">timer.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">start</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 停止定时器</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">timer.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">stop</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 停止定时器并立即执行回调</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">timer.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">flush</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span></code></pre></div><h2 id="interfaces" tabindex="-1">Interfaces <a class="header-anchor" href="#interfaces" aria-label="Permalink to &quot;Interfaces&quot;">​</a></h2><h3 id="timerwithcontroloptions" tabindex="-1">TimerWithControlOptions <a class="header-anchor" href="#timerwithcontroloptions" aria-label="Permalink to &quot;TimerWithControlOptions&quot;">​</a></h3><h4 id="properties" tabindex="-1">Properties <a class="header-anchor" href="#properties" aria-label="Permalink to &quot;Properties&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Property</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>immediateCallback?</code></td><td style="text-align:left;"><code>boolean</code></td><td style="text-align:left;">启动定时器时立即执行一次回调<br><br><strong>Default</strong><br><code>false</code></td></tr><tr><td style="text-align:left;"><code>ms?</code></td><td style="text-align:left;"><code>MaybeGetter</code>&lt;<code>number</code>&gt;</td><td style="text-align:left;">延迟时间，单位：<code>ms</code>，小于等于 <code>0</code> 时不会开启定时器，若 <code>timerType=&#39;requestAnimation&#39;</code>，则此参数无效<br><br><strong>Default</strong><br><code>0</code></td></tr><tr><td style="text-align:left;"><code>type?</code></td><td style="text-align:left;"><code>&quot;setTimeout&quot;</code> | <code>&quot;setInterval&quot;</code> | <code>&quot;requestAnimationFrame&quot;</code></td><td style="text-align:left;">定时器类型</td></tr><tr><td style="text-align:left;"><br>- <code>setTimeout</code>: 仅执行一次回调</td><td style="text-align:left;"></td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;"><br>- <code>setInterval</code>: 循环执行回调，直到手动调用 <code>stop()</code></td><td style="text-align:left;"></td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;"><br>- <code>requestAnimationFrame</code>: 循环执行回调，直到手动调用 <code>stop()</code>，非客户端环境时降级为 <code>setTimeout(fn, 16)</code><br><br><strong>Default</strong><br><code>&#39;setTimeout&#39;</code></td><td style="text-align:left;"></td><td style="text-align:left;"></td></tr></tbody></table>`,17),l=[o];function r(n,d,h,c,p,k){return e(),a("div",null,l)}const m=t(i,[["render",r]]);export{g as __pageData,m as default};
