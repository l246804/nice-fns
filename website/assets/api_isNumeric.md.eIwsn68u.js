import{_ as e,o as a,c as t,R as i}from"./chunks/framework.KXHDQ-dn.js";const k=JSON.parse('{"title":"isNumeric","description":"","frontmatter":{},"headers":[],"relativePath":"api/isNumeric.md","filePath":"api/isNumeric.md"}'),s={name:"api/isNumeric.md"},r=i(`<h1 id="isnumeric" tabindex="-1">isNumeric <a class="header-anchor" href="#isnumeric" aria-label="Permalink to &quot;isNumeric&quot;">​</a></h1><h2 id="functions" tabindex="-1">Functions <a class="header-anchor" href="#functions" aria-label="Permalink to &quot;Functions&quot;">​</a></h2><h3 id="isnumeric-1" tabindex="-1">isNumeric() <a class="header-anchor" href="#isnumeric-1" aria-label="Permalink to &quot;isNumeric()&quot;">​</a></h3><blockquote><p><strong>isNumeric</strong>(<code>value</code>): <code>value is Numeric</code></p></blockquote><p>是否为数字或字符串数字</p><h4 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Parameter</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>value</code></td><td style="text-align:left;"><code>any</code></td><td style="text-align:left;">检测值</td></tr></tbody></table><h4 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>value is Numeric</code></p><h4 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-label="Permalink to &quot;Example&quot;">​</a></h4><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">isNumeric</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">123</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// =&gt; true</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">isNumeric</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;123&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// =&gt; true</span></span></code></pre></div><h2 id="type-aliases" tabindex="-1">Type Aliases <a class="header-anchor" href="#type-aliases" aria-label="Permalink to &quot;Type Aliases&quot;">​</a></h2><h3 id="numeric" tabindex="-1">Numeric <a class="header-anchor" href="#numeric" aria-label="Permalink to &quot;Numeric&quot;">​</a></h3><blockquote><p><strong>Numeric</strong>: <code>string</code> | <code>number</code></p></blockquote>`,14),n=[r];function l(o,c,h,d,p,u){return a(),t("div",null,n)}const g=e(s,[["render",l]]);export{k as __pageData,g as default};
