import{_ as t,o as e,c as a,R as s}from"./chunks/framework.KXHDQ-dn.js";const u=JSON.parse('{"title":"toValue","description":"","frontmatter":{},"headers":[],"relativePath":"api/toValue.md","filePath":"api/toValue.md"}'),l={name:"api/toValue.md"},i=s(`<h1 id="tovalue" tabindex="-1">toValue <a class="header-anchor" href="#tovalue" aria-label="Permalink to &quot;toValue&quot;">​</a></h1><h2 id="functions" tabindex="-1">Functions <a class="header-anchor" href="#functions" aria-label="Permalink to &quot;Functions&quot;">​</a></h2><h3 id="tovalue-1" tabindex="-1">toValue() <a class="header-anchor" href="#tovalue-1" aria-label="Permalink to &quot;toValue()&quot;">​</a></h3><blockquote><p><strong>toValue</strong>&lt;<code>T</code>, <code>P</code>, <code>R</code>&gt;(<code>value</code>, ...<code>args</code>): <code>R</code></p></blockquote><p>获取值，若 <code>value</code> 是函数，则后面的参数将传入其中并得到结果</p><h4 id="type-parameters" tabindex="-1">Type parameters <a class="header-anchor" href="#type-parameters" aria-label="Permalink to &quot;Type parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Parameter</th><th style="text-align:left;">Value</th></tr></thead><tbody><tr><td style="text-align:left;"><code>T</code></td><td style="text-align:left;">-</td></tr><tr><td style="text-align:left;"><code>P</code> extends <code>any</code>[]</td><td style="text-align:left;"><code>T</code> extends (...<code>args</code>) =&gt; <code>any</code> ? <code>Args</code> : []</td></tr><tr><td style="text-align:left;"><code>R</code></td><td style="text-align:left;"><code>T</code> extends (...<code>args</code>) =&gt; <code>Value</code> ? <code>Value</code> : <code>T</code></td></tr></tbody></table><h4 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Parameter</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>value</code></td><td style="text-align:left;"><code>T</code></td><td style="text-align:left;">目标值</td></tr><tr><td style="text-align:left;">...<code>args</code></td><td style="text-align:left;"><code>P</code></td><td style="text-align:left;"><code>value</code> 是函数时的参数列表</td></tr></tbody></table><h4 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>R</code></p><h4 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-label="Permalink to &quot;Example&quot;">​</a></h4><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">toValue</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// =&gt; 1</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">toValue</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// =&gt; 1</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">toValue</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">((</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">v</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> v, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// =&gt; 1</span></span></code></pre></div>`,13),n=[i];function d(o,r,h,c,p,k){return e(),a("div",null,n)}const y=t(l,[["render",d]]);export{u as __pageData,y as default};
