import{_ as e,o as t,c as a,R as s}from"./chunks/framework.KXHDQ-dn.js";const g=JSON.parse('{"title":"scalePx","description":"","frontmatter":{},"headers":[],"relativePath":"api/scalePx/index.md","filePath":"api/scalePx/index.md"}'),l={name:"api/scalePx/index.md"},i=s(`<h1 id="scalepx" tabindex="-1">scalePx <a class="header-anchor" href="#scalepx" aria-label="Permalink to &quot;scalePx&quot;">​</a></h1><h2 id="namespaces" tabindex="-1">Namespaces <a class="header-anchor" href="#namespaces" aria-label="Permalink to &quot;Namespaces&quot;">​</a></h2><ul><li><a href="./namespaces/scalePx.html">scalePx</a></li></ul><h2 id="functions" tabindex="-1">Functions <a class="header-anchor" href="#functions" aria-label="Permalink to &quot;Functions&quot;">​</a></h2><h3 id="scalepx-1" tabindex="-1">scalePx() <a class="header-anchor" href="#scalepx-1" aria-label="Permalink to &quot;scalePx()&quot;">​</a></h3><blockquote><p><strong>scalePx</strong>(<code>value</code>, <code>options</code>): <code>number</code></p></blockquote><p>数值由 <code>px</code> 基于当前视口大小和设计稿大小的比例进行缩放</p><h4 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Parameter</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>value</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">数值</td></tr><tr><td style="text-align:left;"><code>options</code></td><td style="text-align:left;"><a href="./#scalepxoptions"><code>ScalePxOptions</code></a></td><td style="text-align:left;">配置项</td></tr></tbody></table><h4 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>number</code></p><h4 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-label="Permalink to &quot;Example&quot;">​</a></h4><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">scalePx.defaults.mode </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;width&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">scalePx.defaults.designWidth </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1920</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">scalePx.defaults.precision </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 6</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">scalePx</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// =&gt; +((window.innerWidth / 1920) * 100).toFixed(6)</span></span></code></pre></div><h2 id="interfaces" tabindex="-1">Interfaces <a class="header-anchor" href="#interfaces" aria-label="Permalink to &quot;Interfaces&quot;">​</a></h2><h3 id="scalepxoptions" tabindex="-1">ScalePxOptions <a class="header-anchor" href="#scalepxoptions" aria-label="Permalink to &quot;ScalePxOptions&quot;">​</a></h3><h4 id="properties" tabindex="-1">Properties <a class="header-anchor" href="#properties" aria-label="Permalink to &quot;Properties&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Property</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>designHeight?</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">设计稿高度<br><br><strong>Default</strong><br><code>1080</code></td></tr><tr><td style="text-align:left;"><code>designWidth?</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">设计稿宽度<br><br><strong>Default</strong><br><code>1920</code></td></tr><tr><td style="text-align:left;"><code>mode?</code></td><td style="text-align:left;"><a href="./#scalepxmode"><code>ScalePxMode</code></a></td><td style="text-align:left;">缩放模式<br><br><strong>Default</strong><br><code>&#39;width&#39;</code></td></tr><tr><td style="text-align:left;"><code>precision?</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">小数精度<br><br><strong>Default</strong><br><code>6</code></td></tr><tr><td style="text-align:left;"><code>useDocument?</code></td><td style="text-align:left;"><code>boolean</code></td><td style="text-align:left;">使用 <code>document.documentElement</code> 获取窗口大小进行计算，将会排除窗口边框和滚动条大小<br><br><strong>Default</strong><br><code>false</code></td></tr></tbody></table><h2 id="type-aliases" tabindex="-1">Type Aliases <a class="header-anchor" href="#type-aliases" aria-label="Permalink to &quot;Type Aliases&quot;">​</a></h2><h3 id="scalepxmode" tabindex="-1">ScalePxMode <a class="header-anchor" href="#scalepxmode" aria-label="Permalink to &quot;ScalePxMode&quot;">​</a></h3><blockquote><p><strong>ScalePxMode</strong>: <code>&quot;width&quot;</code> | <code>&quot;height&quot;</code></p></blockquote>`,20),d=[i];function n(o,r,c,h,p,x){return t(),a("div",null,d)}const f=e(l,[["render",n]]);export{g as __pageData,f as default};
