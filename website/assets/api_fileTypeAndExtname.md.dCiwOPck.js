import{_ as e,o as a,c as t,R as s}from"./chunks/framework.KXHDQ-dn.js";const y=JSON.parse('{"title":"fileTypeAndExtname","description":"","frontmatter":{},"headers":[],"relativePath":"api/fileTypeAndExtname.md","filePath":"api/fileTypeAndExtname.md"}'),i={name:"api/fileTypeAndExtname.md"},n=s(`<h1 id="filetypeandextname" tabindex="-1">fileTypeAndExtname <a class="header-anchor" href="#filetypeandextname" aria-label="Permalink to &quot;fileTypeAndExtname&quot;">​</a></h1><h2 id="functions" tabindex="-1">Functions <a class="header-anchor" href="#functions" aria-label="Permalink to &quot;Functions&quot;">​</a></h2><h3 id="appendfiletypeandextnamepairs" tabindex="-1">appendFileTypeAndExtnamePairs() <a class="header-anchor" href="#appendfiletypeandextnamepairs" aria-label="Permalink to &quot;appendFileTypeAndExtnamePairs()&quot;">​</a></h3><blockquote><p><strong>appendFileTypeAndExtnamePairs</strong>(<code>pairs</code>): <code>void</code></p></blockquote><p>追加文件类型和扩展名成对列表，文件类型相同时后追加优先级更高</p><h4 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Parameter</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>pairs</code></td><td style="text-align:left;"><a href="./fileTypeAndExtname.html#filetypeandextnamepairs"><code>FileTypeAndExtnamePairs</code></a></td><td style="text-align:left;">文件类型和扩展名成对列表</td></tr></tbody></table><h4 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>void</code></p><h4 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-label="Permalink to &quot;Example&quot;">​</a></h4><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">appendFileTypeAndExtnamePairs</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;image/png&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;.png&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;text/html&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;.html&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;.htm&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><hr><h3 id="hasfiletypeandextnamepairs" tabindex="-1">hasFileTypeAndExtnamePairs() <a class="header-anchor" href="#hasfiletypeandextnamepairs" aria-label="Permalink to &quot;hasFileTypeAndExtnamePairs()&quot;">​</a></h3><blockquote><p><strong>hasFileTypeAndExtnamePairs</strong>(<code>fileType</code>, <code>extname</code>): <code>boolean</code></p></blockquote><p>是否存在指定文件类型和扩展名成对项</p><h4 id="parameters-1" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-1" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Parameter</th><th style="text-align:left;">Type</th><th style="text-align:left;">Default value</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>fileType</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;"><code>&#39;&#39;</code></td><td style="text-align:left;">文件类型</td></tr><tr><td style="text-align:left;"><code>extname</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;"><code>&#39;&#39;</code></td><td style="text-align:left;">扩展名</td></tr></tbody></table><h4 id="returns-1" tabindex="-1">Returns <a class="header-anchor" href="#returns-1" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>boolean</code></p><h4 id="example-1" tabindex="-1">Example <a class="header-anchor" href="#example-1" aria-label="Permalink to &quot;Example&quot;">​</a></h4><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 根据文件类型查找</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">hasFileTypeAndExtnamePairs</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;image/png&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// =&gt; true</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 根据扩展名查找</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">hasFileTypeAndExtnamePairs</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;.gif&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// =&gt; true</span></span></code></pre></div><h2 id="type-aliases" tabindex="-1">Type Aliases <a class="header-anchor" href="#type-aliases" aria-label="Permalink to &quot;Type Aliases&quot;">​</a></h2><h3 id="extname" tabindex="-1">Extname <a class="header-anchor" href="#extname" aria-label="Permalink to &quot;Extname&quot;">​</a></h3><blockquote><p><strong>Extname</strong>: <code>string</code></p></blockquote><hr><h3 id="filetype" tabindex="-1">FileType <a class="header-anchor" href="#filetype" aria-label="Permalink to &quot;FileType&quot;">​</a></h3><blockquote><p><strong>FileType</strong>: <code>string</code></p></blockquote><hr><h3 id="filetypeandextnamepairs" tabindex="-1">FileTypeAndExtnamePairs <a class="header-anchor" href="#filetypeandextnamepairs" aria-label="Permalink to &quot;FileTypeAndExtnamePairs&quot;">​</a></h3><blockquote><p><strong>FileTypeAndExtnamePairs</strong>: [<a href="./fileTypeAndExtname.html#filetype"><code>FileType</code></a>, <a href="./fileTypeAndExtname.html#extname"><code>Extname</code></a>[]][]</p></blockquote>`,30),l=[n];function p(h,r,d,o,c,k){return a(),t("div",null,l)}const m=e(i,[["render",p]]);export{y as __pageData,m as default};
