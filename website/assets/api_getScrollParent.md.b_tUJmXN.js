import{_ as e,o as t,c as a,R as l}from"./chunks/framework.KXHDQ-dn.js";const u=JSON.parse('{"title":"getScrollParent","description":"","frontmatter":{},"headers":[],"relativePath":"api/getScrollParent.md","filePath":"api/getScrollParent.md"}'),s={name:"api/getScrollParent.md"},n=l(`<h1 id="getscrollparent" tabindex="-1">getScrollParent <a class="header-anchor" href="#getscrollparent" aria-label="Permalink to &quot;getScrollParent&quot;">​</a></h1><h2 id="functions" tabindex="-1">Functions <a class="header-anchor" href="#functions" aria-label="Permalink to &quot;Functions&quot;">​</a></h2><h3 id="getscrollparent-1" tabindex="-1">getScrollParent() <a class="header-anchor" href="#getscrollparent-1" aria-label="Permalink to &quot;getScrollParent()&quot;">​</a></h3><blockquote><p><strong>getScrollParent</strong>(<code>start</code>, <code>type</code>, <code>end</code>): <code>undefined</code> | <code>Element</code></p></blockquote><p>获取可滚动的父元素</p><h4 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Parameter</th><th style="text-align:left;">Type</th><th style="text-align:left;">Default value</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>start</code></td><td style="text-align:left;"><code>MaybeNullish</code>&lt;<code>Element</code>&gt;</td><td style="text-align:left;"><code>undefined</code></td><td style="text-align:left;">起点元素</td></tr><tr><td style="text-align:left;"><code>type</code></td><td style="text-align:left;"><a href="./getScrollParent.html#scrolltype"><code>ScrollType</code></a></td><td style="text-align:left;"><code>&#39;both&#39;</code></td><td style="text-align:left;">滚动类型</td></tr><tr><td style="text-align:left;"><code>end</code></td><td style="text-align:left;"><a href="./getScrollParent.html#scrollelement"><code>ScrollElement</code></a></td><td style="text-align:left;"><code>undefined</code></td><td style="text-align:left;">终点元素</td></tr></tbody></table><h4 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>undefined</code> | <code>Element</code></p><h4 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-label="Permalink to &quot;Example&quot;">​</a></h4><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 获取 x 轴方向的可滚动父元素</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getScrollParent</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(element, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;x&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, document.documentElement)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 获取 y 轴方向的可滚动父元素</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getScrollParent</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(element, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;y&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, document.documentElement)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 获取任意轴方向的可滚动父元素</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getScrollParent</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(element, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;both&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, document.documentElement)</span></span></code></pre></div><h2 id="type-aliases" tabindex="-1">Type Aliases <a class="header-anchor" href="#type-aliases" aria-label="Permalink to &quot;Type Aliases&quot;">​</a></h2><h3 id="scrollelement" tabindex="-1">ScrollElement <a class="header-anchor" href="#scrollelement" aria-label="Permalink to &quot;ScrollElement&quot;">​</a></h3><blockquote><p><strong>ScrollElement</strong>: <code>Element</code> | <code>Window</code></p></blockquote><hr><h3 id="scrolltype" tabindex="-1">ScrollType <a class="header-anchor" href="#scrolltype" aria-label="Permalink to &quot;ScrollType&quot;">​</a></h3><blockquote><p><strong>ScrollType</strong>: <code>&quot;x&quot;</code> | <code>&quot;y&quot;</code> | <code>&quot;both&quot;</code></p></blockquote>`,17),o=[n];function i(r,d,c,h,p,k){return t(),a("div",null,o)}const m=e(s,[["render",i]]);export{u as __pageData,m as default};
