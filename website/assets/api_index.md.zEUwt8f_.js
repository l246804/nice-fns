import{_ as s,o as a,c as i,R as e}from"./chunks/framework.KXHDQ-dn.js";const m=JSON.parse('{"title":"nice-fns","description":"","frontmatter":{},"headers":[],"relativePath":"api/index.md","filePath":"api/index.md"}'),n={name:"api/index.md"},t=e(`<h1 id="nice-fns" tabindex="-1">nice-fns <a class="header-anchor" href="#nice-fns" aria-label="Permalink to &quot;nice-fns&quot;">​</a></h1><p>一个基于 TypeScript 和 Lodash 开发的现代 JS 函数库。</p><p><a href="http://rootwater.gitee.io/nice-fns/" target="_blank" rel="noreferrer">文档地址</a></p><h2 id="安装方式" tabindex="-1">安装方式 <a class="header-anchor" href="#安装方式" aria-label="Permalink to &quot;安装方式&quot;">​</a></h2><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># npm</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> i</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> nice-fns</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># yarn or pnpm</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> nice-fns</span></span></code></pre></div><h2 id="使用方式" tabindex="-1">使用方式 <a class="header-anchor" href="#使用方式" aria-label="Permalink to &quot;使用方式&quot;">​</a></h2><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { pascalCase } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;nice-fns&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pascalCase</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;test string&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// =&gt; &#39;TestString&#39;</span></span></code></pre></div><h2 id="迁移至-v1-x" tabindex="-1">迁移至 v1.x <a class="header-anchor" href="#迁移至-v1-x" aria-label="Permalink to &quot;迁移至 v1.x&quot;">​</a></h2><ol><li><code>arrayToMap</code> 移除 <code>filter</code> 配置项，对象数组转换时依据改为 <code>primaryKey</code> 不为空值。</li><li><code>createBEM</code> 修复 <code>namespace</code> 为函数变更时不会变换结果中的 <code>namespace</code>。</li><li><code>createCallbacks</code> 移除配置项和单一执行方式，回调句柄将保持唯一性，<code>runAll</code> 变更为 <code>run</code>。</li><li>部分函数返回中的 <code>null</code> 变更为 <code>undefined</code>。</li><li><code>Extname</code> 更名为 <code>ExtName</code>，相关文件名和变量名已变更。</li><li><code>tree</code> 相关函数类型重构。</li><li><code>toDictionary</code> 将 <code>size</code> 函数变更为 <code>size</code> 属性，类型重构。</li></ol>`,9),l=[t];function c(p,d,o,h,r,k){return a(),i("div",null,l)}const _=s(n,[["render",c]]);export{m as __pageData,_ as default};
