import{_ as e,o as a,c as t,R as s}from"./chunks/framework.KXHDQ-dn.js";const g=JSON.parse('{"title":"parseContentDisposition","description":"","frontmatter":{},"headers":[],"relativePath":"api/parseContentDisposition.md","filePath":"api/parseContentDisposition.md"}'),i={name:"api/parseContentDisposition.md"},n=s(`<h1 id="parsecontentdisposition" tabindex="-1">parseContentDisposition <a class="header-anchor" href="#parsecontentdisposition" aria-label="Permalink to &quot;parseContentDisposition&quot;">​</a></h1><h2 id="functions" tabindex="-1">Functions <a class="header-anchor" href="#functions" aria-label="Permalink to &quot;Functions&quot;">​</a></h2><h3 id="parsecontentdisposition-1" tabindex="-1">parseContentDisposition() <a class="header-anchor" href="#parsecontentdisposition-1" aria-label="Permalink to &quot;parseContentDisposition()&quot;">​</a></h3><blockquote><p><strong>parseContentDisposition</strong>(<code>contentDisposition</code>): <code>Object</code></p></blockquote><p>解析 Content-Disposition</p><h4 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Parameter</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>contentDisposition</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">响应报文的 contentDisposition 属性</td></tr></tbody></table><h4 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>Object</code></p><blockquote><h5 id="extname" tabindex="-1">extname <a class="header-anchor" href="#extname" aria-label="Permalink to &quot;extname&quot;">​</a></h5><blockquote><p><strong>extname</strong>: <code>null</code> | <code>string</code></p></blockquote><h5 id="filename" tabindex="-1">filename <a class="header-anchor" href="#filename" aria-label="Permalink to &quot;filename&quot;">​</a></h5><blockquote><p><strong>filename</strong>: <code>null</code> | <code>string</code></p></blockquote><h5 id="filetype" tabindex="-1">filetype <a class="header-anchor" href="#filetype" aria-label="Permalink to &quot;filetype&quot;">​</a></h5><blockquote><p><strong>filetype</strong>: <code>MaybeNullish</code>&lt;<code>string</code>&gt;</p></blockquote><h5 id="rawfilename" tabindex="-1">rawFilename <a class="header-anchor" href="#rawfilename" aria-label="Permalink to &quot;rawFilename&quot;">​</a></h5><blockquote><p><strong>rawFilename</strong>: <code>null</code> | <code>string</code></p></blockquote></blockquote><h4 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-label="Permalink to &quot;Example&quot;">​</a></h4><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> contentDisposition</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;attachment; filename=&quot;example.pdf&quot;; filename*=UTF-8</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\&#39;\\&#39;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">example%20%E6%B5%8B%E8%AF%95.pdf&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">rawFilename</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">filename</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">extname</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> parseContentDisposition</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(contentDisposition)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(rawFilename, filename, extname)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// rawFilename =&gt; example%20%E6%B5%8B%E8%AF%95.pdf</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// filename =&gt; example 测试.pdf</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// extname =&gt; .pdf</span></span></code></pre></div>`,12),o=[n];function l(p,r,h,d,c,k){return a(),t("div",null,o)}const u=e(i,[["render",l]]);export{g as __pageData,u as default};
